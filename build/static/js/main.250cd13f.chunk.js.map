{"version":3,"sources":["services/adminUsersService.js","actions/adminUser_actions.js","reducers/users_reducer.js","reducers/moviesReducer.js","reducers/adminUser_reducer.js","reducers/subscriptionsReducer.js","reducers/rootReducer.js","stores/store.js","modules/navbar.js","modules/navs.js","modules/home.js","actions/users_actions.js","services/usersServices.js","modules/users.js","actions/movies_actions.js","services/moviesService.js","modules/movies.js","actions/subscriptions_actions.js","services/subscriptionService.js","modules/subscriptions.js","utils/authRoute.js","App.js","reportWebVitals.js","index.js","utils/api.js"],"names":["timeOut","signUpEmail","email","type","signUpPassword","password","logInEmail","logInPassword","adminAccount","account","isLoggedIn","boolean","token","initialState","registerEmail","registerPassword","findEmail","deleteEmail","userInfo","usersReducer","state","action","newRegisterEmail","newRegisterPassword","newFindEmail","newDeleteEmail","data","addMovie","movieTitle","movieGenre","movieYear","movieLength","updateMovie","movieId","findMovieTitle","movieData","id","title","genre","year","movie_length","created_at","deleteMovieId","moviesReducer","input","movieProp","movie","update","movieProperty","object","obj","storeId","singUpEmail","singUpPassword","adminUserAccount","loggedIn","localStorage","getItem","adminUserReducer","loginEmail","loginPassword","addSubscription","subscriptionType","subscriptionData","updateSubscription","subscriptionId","deleteId","subscriptionsReducer","detail","reset","subscription","resetData","subscriptionDetail","updateReset","RootReducer","combineReducers","users","movies","subscriptions","adminUsers","composedEnhancer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","post","require","tokenExpiration","a","jwtDecode","exp","expirationTime","Date","now","setTimeout","dispatch","removeItem","alert","appState","getState","createAdminUser","JSON","stringify","newUser","error","setItem","console","log","loginAdminUser","user","clearTimeout","AppNavbar","useSelector","useDispatch","useState","show","setShow","handleClose","Fragment","Navbar","bg","variant","expand","Brand","as","Link","to","className","href","color","Toggle","Container","me","Collapse","Nav","onClick","NavDropdown","Item","Divider","adminUsersService","stopTimeOut","Modal","onHide","Header","closeButton","Title","Body","Form","Group","Label","Control","value","placeholder","onChange","e","target","Text","Footer","Button","AppTabs","auth","handleAlert","activeKey","eventKey","Home","findUser","deleteUser","get","del","getStore","UserService","appStore","Users","props","showDelete","setShowDelete","showFind","setShowFind","handleFind","usersService","getUser","handleKeyPress","which","preventDefault","createUser","autoComplete","onKeyPress","Card","style","width","display","marginTop","CloseButton","Subtitle","Alert","Heading","findMovie","storeMovieId","delete_movie","put","movieService","appMovies","this","Movies","handleFindMovie","Row","Col","md","sm","addNewMovie","Object","entries","length","deleteMovie","add_Subscription","findSubscription","storeSubscription_id","update_Subscription","store_delete_id","subscriptionService","appSubscriptions","months","price","connect","handleFindSubscription","deleteSubscription","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","requestApi","url","body","options","requestOptions","headers","Accept","Authorization","fetch","response","json","resJson","method","postJson"],"mappings":"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","file":"static/js/main.250cd13f.chunk.js","sourcesContent":["import {\r\n  signUpEmail,\r\n  signUpPassword,\r\n  logInEmail,\r\n  logInPassword,\r\n  adminAccount,\r\n  isLoggedIn,\r\n} from '../actions/adminUser_actions';\r\nimport { store } from '../stores/store';\r\nimport jwtDecode from 'jwt-decode';\r\nconst { post } = require('../utils/api');\r\n\r\nlet timeOut;\r\nconst tokenExpiration = async () => {\r\n  let token = await localStorage.getItem('tk');\r\n  const { exp } = await jwtDecode(token);\r\n  const expirationTime = exp * 1000 - Date.now();\r\n  timeOut = setTimeout(() => {\r\n    store.dispatch(isLoggedIn(false));\r\n    store.dispatch(adminAccount(''));\r\n    localStorage.removeItem('tk');\r\n    alert('Your token has expired you must re-loggIn');\r\n  }, expirationTime);\r\n};\r\n\r\nclass AdminUserService {\r\n  appState = () => store.getState().adminUsers;\r\n  createAdminUser = async () => {\r\n    try {\r\n      const newUser = await post(\r\n        '/api/register',\r\n        JSON.stringify({\r\n          email: this.appState().signUpEmail,\r\n          password: this.appState().signUpPassword,\r\n        })\r\n      );\r\n      if (newUser.error) {\r\n        throw newUser.error;\r\n      }\r\n      localStorage.setItem('tk', newUser.token);\r\n      if (newUser.token) {\r\n        store.dispatch(isLoggedIn(true));\r\n        tokenExpiration();\r\n      }\r\n\r\n      store.dispatch(adminAccount(newUser.account));\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(error);\r\n    }\r\n    store.dispatch(signUpEmail(''));\r\n    store.dispatch(signUpPassword(''));\r\n  };\r\n  loginAdminUser = async () => {\r\n    try {\r\n      const user = await post(\r\n        '/api/login',\r\n        JSON.stringify({\r\n          email: this.appState().logInEmail,\r\n          password: this.appState().logInPassword,\r\n        })\r\n      );\r\n      console.log('user from adminUserService:', user);\r\n      if (user.error) {\r\n        throw user.error;\r\n      }\r\n      localStorage.setItem('tk', user.token);\r\n      if (user.token) {\r\n        store.dispatch(isLoggedIn(true));\r\n        tokenExpiration();\r\n      }\r\n      store.dispatch(adminAccount(user.account));\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(error);\r\n    }\r\n    store.dispatch(logInEmail(''));\r\n    store.dispatch(logInPassword(''));\r\n  };\r\n  stopTimeOut() {\r\n    clearTimeout(timeOut);\r\n  }\r\n}\r\n\r\nexport default new AdminUserService();\r\n","export const signUpEmail = (email) => {\r\n  return {\r\n    type: 'SIGN_UP_EMAIL',\r\n    email: email,\r\n  };\r\n};\r\nexport const signUpPassword = (password) => {\r\n  return {\r\n    type: 'SIGN_UP_PASSWORD',\r\n    password: password,\r\n  };\r\n};\r\nexport const logInEmail = (email) => {\r\n  return {\r\n    type: 'ADMIN_EMAIL',\r\n    email: email,\r\n  };\r\n};\r\nexport const logInPassword = (password) => {\r\n  return {\r\n    type: 'ADMIN_PASSWORD',\r\n    password: password,\r\n  };\r\n};\r\nexport const adminAccount = (email) => {\r\n  return {\r\n    type: 'ADMIN_ACCOUNT',\r\n    account: email,\r\n  };\r\n};\r\nexport const isLoggedIn = (boolean) => {\r\n  return {\r\n    type: 'IS_LOGGEDIN',\r\n    token: boolean,\r\n  };\r\n};\r\n","const initialState = {\r\n  registerEmail: '',\r\n  registerPassword: '',\r\n  findEmail: '',\r\n  deleteEmail: '',\r\n  userInfo: {},\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'REGISTER_EMAIL':\r\n      let newRegisterEmail = action.email;\r\n      return {\r\n        ...state,\r\n        registerEmail: newRegisterEmail,\r\n      };\r\n    case 'REGISTER_PASSWORD':\r\n      let newRegisterPassword = action.password;\r\n      return {\r\n        ...state,\r\n        registerPassword: newRegisterPassword,\r\n      };\r\n    case 'FIND_EMAIL':\r\n      let newFindEmail = action.email;\r\n      return { ...state, findEmail: newFindEmail };\r\n\r\n    case 'DELETE_EMAIL':\r\n      let newDeleteEmail = action.email;\r\n      return { ...state, deleteEmail: newDeleteEmail };\r\n\r\n    case 'USER_INFO':\r\n      let userInfo = action.data;\r\n      return { ...state, userInfo: userInfo };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default usersReducer;\r\n","const initialState = {\r\n  addMovie: {\r\n    movieTitle: '',\r\n    movieGenre: '',\r\n    movieYear: '',\r\n    movieLength: '',\r\n  },\r\n  updateMovie: {},\r\n  movieId: '',\r\n  findMovieTitle: '',\r\n  movieData: {\r\n    id: '',\r\n    title: '',\r\n    genre: '',\r\n    year: '',\r\n    movie_length: '',\r\n    created_at: '',\r\n  },\r\n  deleteMovieId: '',\r\n};\r\n\r\nconst moviesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_MOVIE':\r\n      let input = action.input;\r\n      let movieProp = action.movieProp;\r\n      return {\r\n        ...state,\r\n        addMovie: { ...state.addMovie, [movieProp]: input },\r\n      };\r\n\r\n    case 'FIND_MOVIE':\r\n      let movie = action.movie;\r\n      return {\r\n        ...state,\r\n        findMovieTitle: movie,\r\n      };\r\n\r\n    case 'STORE_MOVIE_DATA':\r\n      const data = action.data;\r\n      return {\r\n        ...state,\r\n        movieData: data,\r\n      };\r\n\r\n    case 'UPDATE_MOVIE':\r\n      let update = action.input;\r\n      let movieProperty = action.movieProp;\r\n      return {\r\n        ...state,\r\n        updateMovie: { ...state.updateMovie, [movieProperty]: update },\r\n      };\r\n    case 'RESET_UPDATE':\r\n      let object = action.obj;\r\n      return {\r\n        ...state,\r\n        updateMovie: object,\r\n      };\r\n\r\n    case 'STORE_ID':\r\n      let storeId = action.id;\r\n      return {\r\n        ...state,\r\n        movieId: storeId,\r\n      };\r\n    case 'DELETE_MOVIE':\r\n      const id = action.id;\r\n      return {\r\n        ...state,\r\n        deleteMovieId: id,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default moviesReducer;\r\n","const initialState = {\r\n  singUpEmail: '',\r\n  singUpPassword: '',\r\n  logInEmail: '',\r\n  logInPassword: '',\r\n  adminUserAccount: '',\r\n  loggedIn: localStorage.getItem('tk') ? true : false,\r\n};\r\nconst adminUserReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'SIGN_UP_EMAIL':\r\n      let email = action.email;\r\n      return {\r\n        ...state,\r\n        signUpEmail: email,\r\n      };\r\n    case 'SIGN_UP_PASSWORD':\r\n      let password = action.password;\r\n      return {\r\n        ...state,\r\n        signUpPassword: password,\r\n      };\r\n    case 'ADMIN_EMAIL':\r\n      let loginEmail = action.email;\r\n      return {\r\n        ...state,\r\n        logInEmail: loginEmail,\r\n      };\r\n    case 'ADMIN_PASSWORD':\r\n      let loginPassword = action.password;\r\n      return {\r\n        ...state,\r\n        logInPassword: loginPassword,\r\n      };\r\n    case 'ADMIN_ACCOUNT':\r\n      let account = action.account;\r\n      return {\r\n        ...state,\r\n        adminUserAccount: account,\r\n      };\r\n    case 'IS_LOGGEDIN':\r\n      let token = action.token;\r\n      return {\r\n        ...state,\r\n        loggedIn: token,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default adminUserReducer;\r\n","const initialState = {\r\n  addSubscription: {},\r\n  subscriptionType: '',\r\n  subscriptionData: {},\r\n  updateSubscription: {},\r\n  subscriptionId: '',\r\n  deleteId: '',\r\n};\r\n\r\nconst subscriptionsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_SUBSCRIPTION':\r\n      let input = action.input;\r\n      let detail = action.detail;\r\n      return {\r\n        ...state,\r\n        addSubscription: { ...state.addSubscription, [detail]: input },\r\n      };\r\n    case 'RESET_ADD_SUBSCRIPTION':\r\n      let reset = action.reset;\r\n      return {\r\n        ...state,\r\n        addSubscription: reset,\r\n      };\r\n\r\n    case 'FIND_SUBSCRIPTION':\r\n      let subscription = action.input;\r\n      return {\r\n        ...state,\r\n        subscriptionType: subscription,\r\n      };\r\n\r\n    case 'STORE_SUBSCRIPTION_DATA':\r\n      const data = action.data;\r\n      return {\r\n        ...state,\r\n        subscriptionData: data,\r\n      };\r\n    case 'RESET_SUBSCRIPTION_DATA':\r\n      let resetData = action.reset;\r\n      return {\r\n        ...state,\r\n        subscriptionData: resetData,\r\n      };\r\n    case 'STORE_SUBSCRIPTION_ID':\r\n      const id = action.id;\r\n      return { ...state, subscriptionId: id };\r\n\r\n    case 'UPDATE_SUBSCRIPTION':\r\n      let update = action.input;\r\n      let subscriptionDetail = action.detail;\r\n      return {\r\n        ...state,\r\n        updateSubscription: {\r\n          ...state.updateSubscription,\r\n          [subscriptionDetail]: update,\r\n        },\r\n      };\r\n\r\n    case 'RESET_UPDATE_SUBSCRIPTION':\r\n      let updateReset = action.reset;\r\n      return {\r\n        ...state,\r\n        updateSubscription: updateReset,\r\n      };\r\n\r\n    case 'STORE_DELETE_ID':\r\n      let deleteId = action.id;\r\n      return {\r\n        ...state,\r\n        deleteId: deleteId,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default subscriptionsReducer;\r\n","import { combineReducers } from 'redux';\r\nimport usersReducer from './users_reducer';\r\nimport moviesReducer from './moviesReducer';\r\nimport adminUserReducer from './adminUser_reducer';\r\nimport subscriptionsReducer from './subscriptionsReducer';\r\n\r\nconst RootReducer = combineReducers({\r\n  users: usersReducer,\r\n  movies: moviesReducer,\r\n  subscriptions: subscriptionsReducer,\r\n  adminUsers: adminUserReducer,\r\n});\r\n\r\nexport default RootReducer;\r\n","import { applyMiddleware, createStore, compose } from 'redux';\r\nimport RootReducer from '../reducers/rootReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composedEnhancer = compose(\r\n  applyMiddleware(thunk),\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport const store = createStore(RootReducer, composedEnhancer);\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Container,\r\n  Navbar,\r\n  Nav,\r\n  Modal,\r\n  Button,\r\n  NavDropdown,\r\n  Form,\r\n} from 'react-bootstrap';\r\nimport { Film } from 'react-bootstrap-icons';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport adminUsersService from '../services/adminUsersService';\r\nimport {\r\n  signUpEmail,\r\n  signUpPassword,\r\n  adminAccount,\r\n  isLoggedIn,\r\n} from '../actions/adminUser_actions';\r\n\r\nconst AppNavbar = () => {\r\n  const adminUsers = useSelector((state) => state.adminUsers);\r\n  const dispatch = useDispatch();\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => {\r\n    adminUsers.loggedIn === false && setShow(true);\r\n  };\r\n\r\n  const handleSignUp = () => {\r\n    adminUsersService.createAdminUser();\r\n    handleClose();\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    dispatch(isLoggedIn(false));\r\n    localStorage.removeItem('tk');\r\n    dispatch(adminAccount(''));\r\n    adminUsersService.stopTimeOut();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\r\n        <Navbar.Brand as={Link} to=\"/\" className=\"ms-5\" href=\"#home\">\r\n          <Film color=\"white\" className=\"me-1\" />\r\n          Best-Movies.com/Admin\r\n        </Navbar.Brand>\r\n\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Container me=\"auto\" className=\"me-5\">\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ms-auto\">\r\n              <Nav.Link onClick={handleShow}>\r\n                {adminUsers.loggedIn === false ? (\r\n                  <span>Create-Account</span>\r\n                ) : null}\r\n              </Nav.Link>\r\n              <NavDropdown title=\"Account\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item href=\"#action/3.1\">\r\n                  {adminUsers.adminUserAccount}\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item as={Link} to=\"/\" onClick={handleLogout}>\r\n                  {adminUsers.loggedIn ? (\r\n                    <span>Log-Out</span>\r\n                  ) : (\r\n                    <span>Not LoggedIn</span>\r\n                  )}\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n\r\n      {/* SING UP MODAL */}\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Sign Up</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {' '}\r\n          <Form id=\"SignUp-Form\">\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                value={adminUsers.registerEmail}\r\n                placeholder=\"Enter email\"\r\n                onChange={(e) => dispatch(signUpEmail(e.target.value))}\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                We'll never share your email with anyone else.\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                value={adminUsers.registerPassword}\r\n                placeholder=\"Password\"\r\n                onChange={(e) => dispatch(signUpPassword(e.target.value))}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={handleSignUp}>\r\n            Submit\r\n          </Button>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AppNavbar;\r\n","import React from 'react';\r\nimport Nav from 'react-bootstrap/nav';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst AppTabs = () => {\r\n  const auth = useSelector((state) => state.adminUsers);\r\n  const handleAlert = () => {\r\n    if (auth.loggedIn === false) {\r\n      alert('You are not logged In');\r\n    }\r\n  };\r\n  if (!auth.loggedIn) {\r\n    return <div></div>;\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <Nav id=\"appNavs\" variant=\"tabs\" activeKey=\"/users\">\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            onClick={handleAlert}\r\n            as={Link}\r\n            to=\"/users\"\r\n            eventKey=\"users\"\r\n            id=\"unique\"\r\n            href=\"/home\"\r\n          >\r\n            Users\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            onClick={handleAlert}\r\n            as={Link}\r\n            to=\"/movies\"\r\n            eventKey=\"movies\"\r\n          >\r\n            Movies\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            as={Link}\r\n            to=\"/subscriptions\"\r\n            eventKey=\"subscriptions\"\r\n            onClick={handleAlert}\r\n          >\r\n            Subscriptions\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AppTabs;\r\n","import React from 'react';\r\nimport { Form, Button, Container } from 'react-bootstrap';\r\nimport { logInEmail, logInPassword } from '../actions/adminUser_actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport adminUsersService from '../services/adminUsersService';\r\nconst Home = () => {\r\n  const adminUsers = useSelector((state) => state.adminUsers);\r\n  const dispatch = useDispatch();\r\n\r\n  if (adminUsers.loggedIn) {\r\n    return <div></div>;\r\n  }\r\n  return (\r\n    <div>\r\n      <h2 className=\"mt-3 ms-3\">Best-Movies/admin </h2>\r\n      <div>\r\n        <Container className=\"d-flex justify-content-center mt-5\">\r\n          <Form>\r\n            <h1>Log In</h1>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                value={adminUsers.logInEmail}\r\n                placeholder=\"Enter email\"\r\n                onChange={(e) => dispatch(logInEmail(e.target.value))}\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                We'll never share your email with anyone else.\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                value={adminUsers.logInPassword}\r\n                placeholder=\"Password\"\r\n                onChange={(e) => dispatch(logInPassword(e.target.value))}\r\n              />\r\n            </Form.Group>\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"button\"\r\n              onClick={adminUsersService.loginAdminUser}\r\n            >\r\n              submit\r\n            </Button>\r\n          </Form>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export const registerEmail = (email) => {\r\n  return {\r\n    type: 'REGISTER_EMAIL',\r\n    email: email,\r\n  };\r\n};\r\nexport const registerPassword = (password) => {\r\n  return {\r\n    type: 'REGISTER_PASSWORD',\r\n    password: password,\r\n  };\r\n};\r\nexport const findUser = (email) => {\r\n  return {\r\n    type: 'FIND_EMAIL',\r\n    email: email,\r\n  };\r\n};\r\nexport const deleteUser = (email) => {\r\n  return {\r\n    type: 'DELETE_EMAIL',\r\n    email: email,\r\n  };\r\n};\r\nexport const userInfo = (data) => {\r\n  return {\r\n    type: 'USER_INFO',\r\n    data: data,\r\n  };\r\n};\r\n","import {\r\n  registerEmail,\r\n  registerPassword,\r\n  findUser,\r\n  deleteUser,\r\n  userInfo,\r\n} from '../actions/users_actions';\r\nimport { store } from '../stores/store';\r\n\r\nconst { get, post, del } = require('../utils/api');\r\nconst getStore = async () => {\r\n  const state = await store.getState();\r\n  return state;\r\n};\r\nclass UserService {\r\n  async createUser() {\r\n    const appStore = await getStore();\r\n    try {\r\n      const newUser = await post(\r\n        '/api/users',\r\n        JSON.stringify({\r\n          email: appStore.users.registerEmail,\r\n          password: appStore.users.registerPassword,\r\n        })\r\n      );\r\n      if (newUser.error) {\r\n        throw newUser.error;\r\n      }\r\n      alert(`User ${newUser.user[0].email} Successfuly created!!`);\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(error);\r\n    }\r\n    store.dispatch(registerEmail(''));\r\n    store.dispatch(registerPassword(''));\r\n  }\r\n  async getUser() {\r\n    const appStore = await getStore();\r\n    try {\r\n      const user = await get(`/api/users/${appStore.users.findEmail}`);\r\n      if (user.error) {\r\n        throw user.error;\r\n      }\r\n      store.dispatch(userInfo(user.user));\r\n    } catch (error) {\r\n      console.log(error);\r\n      store.dispatch(userInfo({ id: '', email: '', created_at: '' }));\r\n      alert(error);\r\n    }\r\n    store.dispatch(findUser(''));\r\n  }\r\n  async deleteUser() {\r\n    const appStore = await getStore();\r\n    try {\r\n      const user = await del(`/api/users/${appStore.users.deleteEmail}`);\r\n      if (user.error) {\r\n        throw user.error;\r\n      }\r\n      alert('User Successfuly deleted!!');\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(error);\r\n    }\r\n    store.dispatch(deleteUser(''));\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Form,\r\n  Button,\r\n  Container,\r\n  Alert,\r\n  Card,\r\n  CloseButton,\r\n} from 'react-bootstrap';\r\nimport {\r\n  registerEmail,\r\n  registerPassword,\r\n  findUser,\r\n  deleteUser,\r\n} from '../actions/users_actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport usersService from '../services/usersServices';\r\n\r\nconst Users = (props) => {\r\n  const users = useSelector((state) => state.users);\r\n  const dispatch = useDispatch();\r\n\r\n  const [showDelete, setShowDelete] = useState(false);\r\n  const [showFind, setShowFind] = useState(false);\r\n\r\n  const removeUser = () => {\r\n    usersService.deleteUser();\r\n    setShowDelete(false);\r\n  };\r\n  const deleteButton = () => {\r\n    if (users.deleteEmail) {\r\n      setShowDelete(true);\r\n    } else {\r\n      alert('Input fiel must have an Email to delete User');\r\n    }\r\n  };\r\n  const handleFind = async () => {\r\n    if (users.findEmail === '') {\r\n      alert('Input field must have an Email');\r\n      return;\r\n    }\r\n    usersService.getUser();\r\n    users.findEmail !== '' && setShowFind(true);\r\n    setTimeout(() => {\r\n      users.userInfo.email === '' && setShowFind(false);\r\n    }, 500);\r\n  };\r\n  const handleKeyPress = (e) => {\r\n    if (e.which === 13) e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container>\r\n        <Form id=\"Register-Form\">\r\n          <h1>Create User</h1>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              value={users.registerEmail}\r\n              placeholder=\"Enter email\"\r\n              onChange={(e) => dispatch(registerEmail(e.target.value))}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </Form.Text>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={users.registerPassword}\r\n              placeholder=\"Password\"\r\n              onChange={(e) => dispatch(registerPassword(e.target.value))}\r\n            />\r\n          </Form.Group>\r\n          <Button\r\n            variant=\"primary\"\r\n            type=\"button\"\r\n            onClick={usersService.createUser}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Container>\r\n      <hr />\r\n      <Container>\r\n        <Form id=\"Find-Form\">\r\n          <h1>Find User</h1>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              autoComplete=\"off\"\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              onChange={(e) => dispatch(findUser(e.target.value))}\r\n              onKeyPress={(e) => handleKeyPress(e)}\r\n              value={users.findEmail}\r\n            />\r\n            <Form.Text id=\"warning\" className=\"text-muted\"></Form.Text>\r\n          </Form.Group>\r\n          <Button type=\"button\" variant=\"primary\" onClick={handleFind}>\r\n            Find\r\n          </Button>\r\n        </Form>\r\n        <Card\r\n          style={{\r\n            width: '30rem',\r\n            display: showFind ? 'block' : 'none',\r\n            marginTop: '1em',\r\n          }}\r\n        >\r\n          <Card.Body>\r\n            <p className=\"d-flex justify-content-end \">\r\n              {' '}\r\n              <CloseButton onClick={() => setShowFind(false)} />\r\n            </p>\r\n            <Card.Title>User Data</Card.Title>\r\n            <Card.Subtitle className=\"mb-2 text-muted\">\r\n              <b className=\"ms-3\">{users.userInfo.email}</b>\r\n            </Card.Subtitle>\r\n            <ul>\r\n              <li>\r\n                <b className=\"me-2\">User id:</b>\r\n                {users.userInfo.id}\r\n              </li>\r\n              <li>\r\n                <b className=\"me-2\">Creation date:</b>\r\n                {users.userInfo.created_at}\r\n              </li>\r\n            </ul>\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n      <hr />\r\n      <Container className=\"mb-5\">\r\n        <Form id=\"Delete-Form\">\r\n          <h1>Delete User</h1>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              autoComplete=\"off\"\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              onChange={(e) => dispatch(deleteUser(e.target.value))}\r\n              onKeyPress={(e) => handleKeyPress(e)}\r\n              value={users.deleteEmail}\r\n            />\r\n            <Form.Text id=\"warning\" className=\"text-muted\"></Form.Text>\r\n          </Form.Group>\r\n          <Alert show={showDelete} variant=\"light\">\r\n            <Alert.Heading>Are you sure you want to delete user?</Alert.Heading>\r\n            <hr />\r\n            <div className=\"d-flex justify-content-center\">\r\n              <Button\r\n                type=\"button\"\r\n                onClick={removeUser}\r\n                variant=\"outline-danger\"\r\n              >\r\n                Yes\r\n              </Button>\r\n              <Button\r\n                className=\"ms-2\"\r\n                onClick={() => setShowDelete(false)}\r\n                variant=\"outline-primary\"\r\n              >\r\n                No\r\n              </Button>\r\n            </div>\r\n          </Alert>\r\n          <Button type=\"button\" variant=\"danger\" onClick={deleteButton}>\r\n            Delete\r\n          </Button>\r\n        </Form>\r\n      </Container>\r\n      <hr />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","export const addMovie = (input, movieProp) => {\r\n  return {\r\n    type: 'ADD_MOVIE',\r\n    input: input,\r\n    movieProp: movieProp,\r\n  };\r\n};\r\nexport const findMovie = (movie) => {\r\n  return {\r\n    type: 'FIND_MOVIE',\r\n    movie: movie,\r\n  };\r\n};\r\nexport const storeMovie = (data) => {\r\n  return {\r\n    type: 'STORE_MOVIE_DATA',\r\n    data: data,\r\n  };\r\n};\r\nexport const updateMovie = (input, movieProp) => {\r\n  return {\r\n    type: 'UPDATE_MOVIE',\r\n    input: input,\r\n    movieProp: movieProp,\r\n  };\r\n};\r\nexport const resetUpdate = (obj) => {\r\n  return {\r\n    type: 'RESET_UPDATE',\r\n    obj: obj,\r\n  };\r\n};\r\nexport const storeMovieId = (id) => {\r\n  return {\r\n    type: 'STORE_ID',\r\n    id: id,\r\n  };\r\n};\r\n\r\nexport const delete_movie = (id) => {\r\n  return {\r\n    type: 'DELETE_MOVIE',\r\n    id: id,\r\n  };\r\n};\r\n","import {\r\n  addMovie,\r\n  findMovie,\r\n  storeMovie,\r\n  updateMovie,\r\n  storeMovieId,\r\n  resetUpdate,\r\n  delete_movie,\r\n} from '../actions/movies_actions';\r\nimport { store } from '../stores/store';\r\n\r\nconst { get, post, del, put } = require('../utils/api');\r\n\r\nclass movieService {\r\n  state = () => store.getState();\r\n  async addNewMovie() {\r\n    const appMovies = this.state().movies;\r\n    try {\r\n      const movie = await post(\r\n        '/api/movies',\r\n        JSON.stringify({\r\n          title: appMovies.addMovie.movieTitle,\r\n          genre: appMovies.addMovie.movieGenre,\r\n          year: appMovies.addMovie.movieYear,\r\n          movieLength: appMovies.addMovie.movieLength,\r\n        })\r\n      );\r\n      if (movie.error) {\r\n        throw movie.error;\r\n      }\r\n      alert(`The movie \"${movie.movie.title}\" has been created !!`);\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(error);\r\n    }\r\n\r\n    store.dispatch(addMovie('', 'movieTitle'));\r\n    store.dispatch(addMovie('', 'movieGenre'));\r\n    store.dispatch(addMovie('', 'movieYear'));\r\n    store.dispatch(addMovie('', 'movieLength'));\r\n  }\r\n  async findMovie() {\r\n    const appStore = this.state().movies;\r\n    try {\r\n      const movie = await get(`/api/movies/${appStore.findMovieTitle}`);\r\n      if (movie.error) {\r\n        throw movie.error;\r\n      }\r\n      store.dispatch(storeMovie(movie.movie));\r\n      store.dispatch(findMovie(''));\r\n      return movie;\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(error);\r\n    }\r\n    store.dispatch(findMovie(''));\r\n  }\r\n  async updateMovie() {\r\n    const appStore = this.state().movies;\r\n    try {\r\n      const movie = await put(\r\n        `/api/movies/${appStore.movieId}`,\r\n        JSON.stringify(appStore.updateMovie)\r\n      );\r\n      if (movie.error) {\r\n        throw movie.error;\r\n      }\r\n      alert('Movie successfuly updated');\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    store.dispatch(updateMovie('', 'title'));\r\n    store.dispatch(updateMovie('', 'genre'));\r\n    store.dispatch(updateMovie('', 'year'));\r\n    store.dispatch(updateMovie('', 'movieLength'));\r\n    store.dispatch(storeMovieId(''));\r\n    store.dispatch(resetUpdate({}));\r\n  }\r\n  async deleteMovie() {\r\n    const appStore = this.state().movies;\r\n    try {\r\n      const movie = await del(`/api/movies/${appStore.deleteMovieId}`);\r\n      if (movie.error) {\r\n        throw movie.error;\r\n      }\r\n      alert('Movie was successfuly deleted');\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(error);\r\n    }\r\n    store.dispatch(delete_movie(''));\r\n  }\r\n}\r\n\r\nexport default new movieService();\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Button,\r\n  Container,\r\n  Card,\r\n  Row,\r\n  Col,\r\n  CloseButton,\r\n  Alert,\r\n} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  addMovie,\r\n  findMovie,\r\n  updateMovie,\r\n  storeMovieId,\r\n  delete_movie,\r\n} from '../actions/movies_actions';\r\nimport movieService from '../services/moviesService';\r\nimport { useState } from 'react';\r\n\r\nconst Movies = (props) => {\r\n  const movies = useSelector((state) => state.movies);\r\n  const dispatch = useDispatch();\r\n  const [show, setShow] = useState(false);\r\n  const [showDelete, setShowDelete] = useState(false);\r\n\r\n  const handleAddMovie = () => {\r\n    movieService.addNewMovie();\r\n  };\r\n  const handleUpdateMovie = () => {\r\n    if (movies.movieId === '') {\r\n      alert('Must give a movie Id');\r\n      return;\r\n    }\r\n    if (Object.entries(movies.updateMovie).length === 0) {\r\n      alert('One or more of the input fields must have data to update');\r\n      return;\r\n    }\r\n    movieService.updateMovie();\r\n  };\r\n  const handleFindMovie = async () => {\r\n    if (movies.findMovieTitle === '') {\r\n      alert('Input fiel must have a movie title');\r\n      return;\r\n    }\r\n    const movie = await movieService.findMovie();\r\n    movies.findMovieTitle !== '' && setShow(true);\r\n    !movie && setShow(false);\r\n  };\r\n\r\n  const handleRemoveMovie = () => {\r\n    movieService.deleteMovie();\r\n    setShowDelete(false);\r\n  };\r\n  const handleDeleteButton = () => {\r\n    if (movies.deleteMovieId === '') {\r\n      alert('Must enter a movie Id');\r\n      return;\r\n    }\r\n    setShowDelete(true);\r\n  };\r\n  const handleKeyPress = (e) => {\r\n    if (e.which === 13) e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Form id=\"addMovie-Form\">\r\n          <h1>Add Movie</h1>\r\n          <Row>\r\n            <Col md>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Movie Title</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={movies.addMovie.movieTitle}\r\n                  placeholder=\"Enter title\"\r\n                  onChange={(e) =>\r\n                    dispatch(addMovie(e.target.value, 'movieTitle'))\r\n                  }\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Movie Genre</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={movies.addMovie.movieGenre}\r\n                  placeholder=\"Enter genre\"\r\n                  onChange={(e) =>\r\n                    dispatch(addMovie(e.target.value, 'movieGenre'))\r\n                  }\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col sm>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Movie Year</Form.Label>\r\n                <Form.Control\r\n                  placeholder=\"Enter year\"\r\n                  type=\"number\"\r\n                  value={movies.addMovie.movieYear}\r\n                  onChange={(e) =>\r\n                    dispatch(addMovie(e.target.value, 'movieYear'))\r\n                  }\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Movie Length</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={movies.addMovie.movieLength}\r\n                  placeholder=\"Enter time e.g. 02:30:00\"\r\n                  onChange={(e) =>\r\n                    dispatch(addMovie(e.target.value, 'movieLength'))\r\n                  }\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Button variant=\"primary\" type=\"button\" onClick={handleAddMovie}>\r\n            Add\r\n          </Button>\r\n        </Form>\r\n      </Container>\r\n      <hr />\r\n\r\n      <Container>\r\n        <Form id=\"FindMovie-Form\">\r\n          <h1>Find Movie</h1>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Movie title</Form.Label>\r\n            <Form.Control\r\n              autoComplete=\"off\"\r\n              type=\"text\"\r\n              placeholder=\"Enter movie title\"\r\n              onKeyPress={(e) => handleKeyPress(e)}\r\n              onChange={(e) => dispatch(findMovie(e.target.value))}\r\n              value={movies.findMovieTitle}\r\n            />\r\n          </Form.Group>\r\n          <Button type=\"button\" variant=\"primary\" onClick={handleFindMovie}>\r\n            Find\r\n          </Button>\r\n        </Form>\r\n        <Card\r\n          style={{\r\n            width: '30rem',\r\n            display: show ? 'block' : 'none',\r\n            marginTop: '1em',\r\n          }}\r\n        >\r\n          <Card.Body>\r\n            <p className=\"d-flex justify-content-end \">\r\n              {' '}\r\n              <CloseButton onClick={() => setShow(false)} />\r\n            </p>\r\n\r\n            <Card.Title>Movie</Card.Title>\r\n            <Card.Subtitle className=\"mb-2 text-muted\">\r\n              <b className=\"ms-3\">{movies.movieData.title}</b>\r\n            </Card.Subtitle>\r\n            <ul>\r\n              <li>\r\n                <b className=\"me-2\">Id: </b>\r\n                {movies.movieData.id}\r\n              </li>\r\n              <li>\r\n                <b className=\"me-2\">Genre: </b>\r\n                {movies.movieData.genre}\r\n              </li>\r\n              <li>\r\n                <b className=\"me-2\">Year:</b>\r\n                {movies.movieData.year}\r\n              </li>\r\n              <li>\r\n                <b className=\"me-2\">Length:</b>\r\n                {movies.movieData.movie_length}\r\n              </li>\r\n              <li>\r\n                <b className=\"me-2\">Creation date:</b>\r\n                {movies.movieData.created_at}\r\n              </li>\r\n            </ul>\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n\r\n      <hr />\r\n      <Container>\r\n        <Form id=\"update-Form\">\r\n          <h1>Update Movie</h1>\r\n          <Row>\r\n            <Col sm>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Movie Id</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={movies.movieId}\r\n                  placeholder=\"Enter Id\"\r\n                  onChange={(e) => dispatch(storeMovieId(e.target.value))}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Movie Title</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={movies.updateMovie.title && movies.updateMovie.title}\r\n                  placeholder=\"Enter title\"\r\n                  onChange={(e) =>\r\n                    dispatch(updateMovie(e.target.value, 'title'))\r\n                  }\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Movie Genre</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={movies.updateMovie.genre && movies.updateMovie.genre}\r\n                  placeholder=\"Enter genre\"\r\n                  onChange={(e) =>\r\n                    dispatch(updateMovie(e.target.value, 'genre'))\r\n                  }\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col sm>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Movie Year</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  placeholder=\"Enter year\"\r\n                  value={movies.updateMovie.year && movies.updateMovie.year}\r\n                  onChange={(e) =>\r\n                    dispatch(updateMovie(e.target.value, 'year'))\r\n                  }\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Movie Length</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={\r\n                    movies.updateMovie.movieLength &&\r\n                    movies.updateMovie.movieLength\r\n                  }\r\n                  placeholder=\"Enter time e.g. 02:30:00\"\r\n                  onChange={(e) =>\r\n                    dispatch(updateMovie(e.target.value, 'movieLength'))\r\n                  }\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Button variant=\"primary\" type=\"button\" onClick={handleUpdateMovie}>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Container>\r\n      <hr />\r\n      <Container className=\"mb-5\">\r\n        <Form id=\"DeleteMovie-Form\">\r\n          <h1>Delete Movie</h1>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Movie Id</Form.Label>\r\n            <Form.Control\r\n              autoComplete=\"off\"\r\n              type=\"email\"\r\n              placeholder=\"Enter movie Id\"\r\n              onKeyPress={(e) => handleKeyPress(e)}\r\n              onChange={(e) => dispatch(delete_movie(e.target.value))}\r\n              value={movies.deleteMovieId}\r\n            />\r\n            <Form.Text id=\"warning\" className=\"text-muted\"></Form.Text>\r\n          </Form.Group>\r\n          <Alert show={showDelete} variant=\"light\">\r\n            <Alert.Heading>Are you sure you want to delete user?</Alert.Heading>\r\n            <hr />\r\n            <div className=\"d-flex justify-content-center\">\r\n              <Button\r\n                type=\"button\"\r\n                onClick={handleRemoveMovie}\r\n                variant=\"outline-danger\"\r\n              >\r\n                Yes\r\n              </Button>\r\n              <Button\r\n                className=\"ms-2\"\r\n                onClick={() => setShowDelete(false)}\r\n                variant=\"outline-primary\"\r\n              >\r\n                No\r\n              </Button>\r\n            </div>\r\n          </Alert>\r\n          <Button type=\"button\" variant=\"danger\" onClick={handleDeleteButton}>\r\n            Delete\r\n          </Button>\r\n        </Form>\r\n      </Container>\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","export const add_Subscription = (input, detail) => {\r\n  return {\r\n    type: 'ADD_SUBSCRIPTION',\r\n    input: input,\r\n    detail: detail,\r\n  };\r\n};\r\n\r\nexport const resetAddSubscription = (obj) => {\r\n  return {\r\n    type: 'RESET_ADD_SUBSCRIPTION',\r\n    reset: obj,\r\n  };\r\n};\r\nexport const findSubscription = (input) => {\r\n  return {\r\n    type: 'FIND_SUBSCRIPTION',\r\n    input: input,\r\n  };\r\n};\r\nexport const storeSubscription = (data) => {\r\n  return {\r\n    type: 'STORE_SUBSCRIPTION_DATA',\r\n    data: data,\r\n  };\r\n};\r\n\r\nexport const resetSubscriptionData = (obj) => {\r\n  return {\r\n    type: 'RESET_SUBSCRIPTION_DATA',\r\n    reset: obj,\r\n  };\r\n};\r\n\r\nexport const storeSubscription_id = (id) => {\r\n  return {\r\n    type: 'STORE_SUBSCRIPTION_ID',\r\n    id: id,\r\n  };\r\n};\r\n\r\nexport const update_Subscription = (input, detail) => {\r\n  return {\r\n    type: 'UPDATE_SUBSCRIPTION',\r\n    input: input,\r\n    detail: detail,\r\n  };\r\n};\r\n\r\nexport const reset_update_subscription = (obj) => {\r\n  return {\r\n    type: 'RESET_UPDATE_SUBSCRIPTION',\r\n    reset: obj,\r\n  };\r\n};\r\n\r\nexport const store_delete_id = (id) => {\r\n  return {\r\n    type: 'STORE_DELETE_ID',\r\n    id: id,\r\n  };\r\n};\r\n","import {\r\n  add_Subscription,\r\n  findSubscription,\r\n  storeSubscription,\r\n  storeSubscription_id,\r\n  update_Subscription,\r\n  resetAddSubscription,\r\n  resetSubscriptionData,\r\n  reset_update_subscription,\r\n  store_delete_id,\r\n} from '../actions/subscriptions_actions';\r\nimport { store } from '../stores/store';\r\nconst { get, post, del, put } = require('../utils/api');\r\n\r\nclass subscriptionService {\r\n  state = () => store.getState();\r\n  async addSubscription() {\r\n    const appSubscriptions = this.state().subscriptions.addSubscription;\r\n    try {\r\n      const subscription = await post(\r\n        '/api/subscriptions/',\r\n        JSON.stringify({\r\n          type: appSubscriptions.type,\r\n          detail: appSubscriptions.detail,\r\n          months: appSubscriptions.months,\r\n          price: appSubscriptions.price,\r\n        })\r\n      );\r\n      if (subscription.error) {\r\n        throw subscription.error;\r\n      }\r\n      alert(\r\n        `The subscription \"${subscription.subscription.type}\" has been created !!`\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(error);\r\n    }\r\n    store.dispatch(add_Subscription('', 'type'));\r\n    store.dispatch(add_Subscription('', 'detail'));\r\n    store.dispatch(add_Subscription('', 'months'));\r\n    store.dispatch(add_Subscription('', 'price'));\r\n    store.dispatch(resetAddSubscription({}));\r\n  }\r\n  async findSubscription() {\r\n    const appStore = this.state().subscriptions;\r\n    try {\r\n      const subscription = await get(\r\n        `/api/subscriptions/${appStore.subscriptionType}`\r\n      );\r\n      if (subscription.error) {\r\n        throw subscription.error;\r\n      }\r\n      store.dispatch(storeSubscription(subscription.subscription));\r\n      store.dispatch(findSubscription(''));\r\n      return subscription;\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(error);\r\n    }\r\n    store.dispatch(findSubscription(''));\r\n    store.dispatch(resetSubscriptionData({}));\r\n  }\r\n  async updateSubscription() {\r\n    const appStore = this.state().subscriptions;\r\n    try {\r\n      const subscription = await put(\r\n        `/api/subscriptions/${appStore.subscriptionId}`,\r\n        JSON.stringify(appStore.updateSubscription)\r\n      );\r\n      if (subscription.error) {\r\n        throw subscription.error;\r\n      }\r\n      alert('Subscription successfuly updated');\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(error);\r\n    }\r\n    store.dispatch(update_Subscription('', 'type'));\r\n    store.dispatch(update_Subscription('', 'detail'));\r\n    store.dispatch(update_Subscription('', 'months'));\r\n    store.dispatch(update_Subscription('', 'price'));\r\n    store.dispatch(storeSubscription_id(''));\r\n    store.dispatch(reset_update_subscription({}));\r\n  }\r\n  async deleteSubscription() {\r\n    const appStore = this.state().subscriptions;\r\n    try {\r\n      const subscription = await del(`/api/subscriptions/${appStore.deleteId}`);\r\n      if (subscription.error) {\r\n        throw subscription.error;\r\n      }\r\n      alert('Subscription was successfuly deleted');\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(error);\r\n    }\r\n\r\n    store.dispatch(store_delete_id(''));\r\n  }\r\n}\r\n\r\nexport default new subscriptionService();\r\n","import React from 'react';\r\nimport {\r\n  add_Subscription,\r\n  findSubscription,\r\n  update_Subscription,\r\n  storeSubscription_id,\r\n  store_delete_id,\r\n} from '../actions/subscriptions_actions';\r\nimport {\r\n  Form,\r\n  Button,\r\n  Container,\r\n  Card,\r\n  Row,\r\n  Col,\r\n  CloseButton,\r\n  Alert,\r\n} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport subscriptionService from '../services/subscriptionService';\r\n\r\nconst Subscriptions = (props) => {\r\n  const [show, setShow] = useState(false);\r\n  const [showDelete, setShowDelete] = useState(false);\r\n\r\n  const {\r\n    addSubscription,\r\n    subscriptionData,\r\n    subscriptionType,\r\n    updateSubscription,\r\n    subscriptionId,\r\n    deleteId,\r\n    dispatch,\r\n  } = props;\r\n\r\n  const handleAddSubscription = () => {\r\n    subscriptionService.addSubscription();\r\n  };\r\n  const handleFindSubscription = async () => {\r\n    if (subscriptionType === '') {\r\n      alert('Input field must have a valid subscription type');\r\n      return;\r\n    }\r\n    const subscription = await subscriptionService.findSubscription();\r\n    subscription && setShow(true);\r\n    !subscription && setShow(false);\r\n  };\r\n  const handleUpdateSubscription = () => {\r\n    if (subscriptionId === '') {\r\n      alert('No subscription Id was given');\r\n      return;\r\n    }\r\n    if (Object.entries(updateSubscription).length === 0) {\r\n      alert('One or more of the input fields must have data to update');\r\n      return;\r\n    }\r\n    subscriptionService.updateSubscription();\r\n  };\r\n\r\n  const handleDeleteButton = () => {\r\n    if (deleteId === '') {\r\n      alert('Must provide a subscription id');\r\n      return;\r\n    }\r\n    setShowDelete(true);\r\n  };\r\n  const handleRemoveSubscription = () => {\r\n    subscriptionService.deleteSubscription();\r\n    setShowDelete(false);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.which === 13) e.preventDefault();\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Container>\r\n        <Form id=\"addMovie-Form\">\r\n          <h1>Add Subscription</h1>\r\n          <Row>\r\n            <Col md>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Subscription Type</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={addSubscription.type}\r\n                  placeholder=\"Enter subscription name\"\r\n                  onChange={(e) =>\r\n                    dispatch(add_Subscription(e.target.value, 'type'))\r\n                  }\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Detail</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={addSubscription.detail}\r\n                  placeholder=\"Enter detail\"\r\n                  onChange={(e) =>\r\n                    dispatch(add_Subscription(e.target.value, 'detail'))\r\n                  }\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col sm>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Months</Form.Label>\r\n                <Form.Control\r\n                  placeholder=\"Enter a number\"\r\n                  type=\"number\"\r\n                  value={addSubscription.months}\r\n                  onChange={(e) =>\r\n                    dispatch(add_Subscription(e.target.value, 'months'))\r\n                  }\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Price</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  value={addSubscription.price}\r\n                  placeholder=\"Enter number\"\r\n                  onChange={(e) =>\r\n                    dispatch(add_Subscription(e.target.value, 'price'))\r\n                  }\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Button\r\n            variant=\"primary\"\r\n            type=\"button\"\r\n            onClick={handleAddSubscription}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Form>\r\n      </Container>\r\n      <hr />\r\n      <Container>\r\n        <Form id=\"FindSubscription-Form\">\r\n          <h1>Find Subscription</h1>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Subscription Type</Form.Label>\r\n            <Form.Control\r\n              autoComplete=\"off\"\r\n              type=\"text\"\r\n              placeholder=\"Enter subscription type\"\r\n              onChange={(e) => dispatch(findSubscription(e.target.value))}\r\n              onKeyPress={(e) => handleKeyPress(e)}\r\n              value={subscriptionType}\r\n            />\r\n          </Form.Group>\r\n          <Button\r\n            type=\"button\"\r\n            variant=\"primary\"\r\n            onClick={handleFindSubscription}\r\n          >\r\n            Find\r\n          </Button>\r\n        </Form>\r\n        <Card\r\n          style={{\r\n            width: '30rem',\r\n            display: show ? 'block' : 'none',\r\n            marginTop: '1em',\r\n          }}\r\n        >\r\n          <Card.Body>\r\n            <p className=\"d-flex justify-content-end \">\r\n              {' '}\r\n              <CloseButton onClick={() => setShow(false)} />\r\n            </p>\r\n\r\n            <Card.Title>Subscription</Card.Title>\r\n            <Card.Subtitle className=\"mb-2 text-muted\">\r\n              <b className=\"ms-3\">{subscriptionData.type}</b>\r\n            </Card.Subtitle>\r\n            <ul>\r\n              <li>\r\n                <b className=\"me-2\">id: </b>\r\n                {subscriptionData.id}\r\n              </li>\r\n              <li>\r\n                <b className=\"me-2\">Detail: </b>\r\n                {subscriptionData.detail}\r\n              </li>\r\n              <li>\r\n                <b className=\"me-2\">Months: </b>\r\n                {subscriptionData.months}\r\n              </li>\r\n              <li>\r\n                <b className=\"me-2\">Price:</b>\r\n                {subscriptionData.price}\r\n              </li>\r\n            </ul>\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n      <hr />\r\n      <Container>\r\n        <Form id=\"updateSubscription-Form\">\r\n          <h1>Update Subscription</h1>\r\n          <Row>\r\n            <Col sm>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Subscription Id</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={subscriptionId}\r\n                  placeholder=\"Enter Id\"\r\n                  onChange={(e) =>\r\n                    dispatch(storeSubscription_id(e.target.value))\r\n                  }\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Subscription type</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={updateSubscription.type}\r\n                  placeholder=\"Enter subscription type\"\r\n                  onChange={(e) =>\r\n                    dispatch(update_Subscription(e.target.value, 'type'))\r\n                  }\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Detail</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={updateSubscription.detail}\r\n                  placeholder=\"Enter detail\"\r\n                  onChange={(e) =>\r\n                    dispatch(update_Subscription(e.target.value, 'detail'))\r\n                  }\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col sm>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Months</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  placeholder=\"Enter number\"\r\n                  value={updateSubscription.months}\r\n                  onChange={(e) =>\r\n                    dispatch(update_Subscription(e.target.value, 'months'))\r\n                  }\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Price</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  value={updateSubscription.price}\r\n                  placeholder=\"Enter number\"\r\n                  onChange={(e) =>\r\n                    dispatch(update_Subscription(e.target.value, 'price'))\r\n                  }\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Button\r\n            variant=\"primary\"\r\n            type=\"button\"\r\n            onClick={handleUpdateSubscription}\r\n          >\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Container>\r\n      <hr />\r\n      <Container className=\"mb-5\">\r\n        <Form id=\"DeleteSubscription-Form\">\r\n          <h1>Delete Subscription</h1>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Subscription Id</Form.Label>\r\n            <Form.Control\r\n              autoComplete=\"off\"\r\n              type=\"text\"\r\n              placeholder=\"Enter id\"\r\n              onChange={(e) => dispatch(store_delete_id(e.target.value))}\r\n              value={deleteId}\r\n              onKeyPress={(e) => handleKeyPress(e)}\r\n            />\r\n            <Form.Text id=\"warning\" className=\"text-muted\"></Form.Text>\r\n          </Form.Group>\r\n          <Alert show={showDelete} variant=\"light\">\r\n            <Alert.Heading>Are you sure you want to delete user?</Alert.Heading>\r\n            <hr />\r\n            <div className=\"d-flex justify-content-center\">\r\n              <Button\r\n                type=\"button\"\r\n                onClick={handleRemoveSubscription}\r\n                variant=\"outline-danger\"\r\n              >\r\n                Yes\r\n              </Button>\r\n              <Button\r\n                className=\"ms-2\"\r\n                onClick={() => setShowDelete(false)}\r\n                variant=\"outline-primary\"\r\n              >\r\n                No\r\n              </Button>\r\n            </div>\r\n          </Alert>\r\n          <Button type=\"button\" variant=\"danger\" onClick={handleDeleteButton}>\r\n            Delete\r\n          </Button>\r\n        </Form>\r\n      </Container>\r\n      <hr />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    addSubscription: state.subscriptions.addSubscription,\r\n    subscriptionType: state.subscriptions.subscriptionType,\r\n    subscriptionData: state.subscriptions.subscriptionData,\r\n    updateSubscription: state.subscriptions.updateSubscription,\r\n    subscriptionId: state.subscriptions.subscriptionId,\r\n    deleteId: state.subscriptions.deleteId,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return { dispatch: dispatch };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Subscriptions);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nconst AuthRoute = (props) => {\r\n  const { loggedIn, type } = props;\r\n  if (type === 'guest' && loggedIn) return <Redirect to=\"/users\" />;\r\n  else if (type === 'private' && !loggedIn) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return <Route {...props} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loggedIn: state.adminUsers.loggedIn,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(AuthRoute);\r\n","import React from 'react';\nimport './App.css';\nimport AppNavbar from './modules/navbar';\nimport AppNavs from './modules/navs';\nimport { Switch } from 'react-router-dom';\nimport Home from './modules/home';\nimport Users from './modules/users';\nimport Movies from './modules/movies';\nimport Subscriptions from './modules/subscriptions';\nimport AuthRoute from './utils/authRoute';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <AppNavbar />\n      <div className=\"App\">\n        <AppNavs />\n        <Switch>\n          <AuthRoute exact path=\"/\" type=\"guest\">\n            <Home />\n          </AuthRoute>\n          <AuthRoute path=\"/users\" type=\"private\">\n            <Users />\n          </AuthRoute>\n          <AuthRoute path=\"/movies\" type=\"private\">\n            <Movies />\n          </AuthRoute>\n          <AuthRoute path=\"/subscriptions\" type=\"private\">\n            <Subscriptions />\n          </AuthRoute>\n        </Switch>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './stores/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// const apiUrl = 'http://localhost:8081';\r\nconst apiUrl = 'https://b-movies-sever.herokuapp.com';\r\n\r\nexport const requestApi = async (url, body, options) => {\r\n  let requestOptions = {};\r\n  requestOptions.headers = {\r\n    'content-Type': 'application/json',\r\n    Accept: 'application/json',\r\n    Authorization: `Bearer ${localStorage.getItem('tk')} `,\r\n  };\r\n  if (body) {\r\n    requestOptions.body = body;\r\n  }\r\n\r\n  const response = await fetch(apiUrl + url, {\r\n    ...requestOptions,\r\n    ...options,\r\n  });\r\n  const resJson = await response.json();\r\n  return resJson;\r\n};\r\n\r\nexport const get = async (url, options) => {\r\n  return requestApi(url, false, { method: 'GET', ...options });\r\n};\r\n\r\nexport const post = async (url, body, options) => {\r\n  const response = await requestApi(url, body, { method: 'POST', ...options });\r\n  return response;\r\n};\r\nexport const put = async (url, body, options) => {\r\n  const response = await requestApi(url, body, { method: 'PUT', ...options });\r\n  return response;\r\n};\r\nexport const del = async (url, options) => {\r\n  const response = await requestApi(url, false, {\r\n    method: 'DELETE',\r\n    ...options,\r\n  });\r\n  return response;\r\n};\r\n\r\nexport const postJson = (url, body, options) => {\r\n  return requestApi(url, body, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(body),\r\n  });\r\n};\r\n"],"sourceRoot":""}